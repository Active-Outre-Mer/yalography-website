import { logError } from "@lib/notion";
import { NextApiHandler } from "next";
import { handlePromise } from "@util/handle-promise";

async function test() {
  throw new Error("There was an error");
}

const handler: NextApiHandler = async (req, res) => {
  try {
    const testPromise = test();
    const [status, data] = await handlePromise(testPromise);
    if (status === "error") {
      await logError({
        title: "Test error",
        apiURL: "/api/error-log",
        statusCode: 500,
        description: "This error was generated by the notion API.",
        stackTrace: data.stack
      });
    }
    return res.status(200).json({ message: "Error successfully logged" });
  } catch (error) {
    if (error instanceof Error) {
      console.log(error);
      console.log("This is indeed an error");
    }
    return res.status(500).json({ message: "An error occurred on the server" });
  }
};

export default handler;
